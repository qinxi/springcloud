group 'com.qinxi1992.springcloud'
version '1.0-SNAPSHOT'



buildscript {
    ext {
        springBootVersion = '1.5.4.RELEASE'
        springCloudNetflix='1.3.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}


apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/plugins-release" }
    jcenter()
}


subprojects{
    buildscript {
        repositories {
            mavenLocal()
            mavenCentral()
            maven { url "http://repo.spring.io/plugins-release" }
            jcenter()
        }
        dependencies {
            classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        }
    }

    group 'com.qinxi1992.springcloud'
    version '1.0-SNAPSHOT'


    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'docker'

    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-config:${springCloudNetflix}"
            mavenBom "org.springframework.cloud:spring-cloud-netflix-core:${springCloudNetflix}"
        }
    }


    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()

    }


    idea {
        module {
            inheritOutputDirs = false
            outputDir = file("$buildDir/classes/main/")
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    group = 'qinxi'

    task buildDocker(type: Docker, dependsOn: build, group :'qinxi') {
        //push = true
        applicationName = jar.baseName
        dockerfile = file('src/main/docker/Dockerfile')
        doFirst {
            copy {
                from jar
                into stageDir
            }
        }
    }
}
